%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Apr 25 09:40:01 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
( 7) Rshow
1.000 UL
LTb
798 915 M
63 0 V
6101 0 R
-63 0 V
714 915 M
( 7.5) Rshow
1.000 UL
LTb
798 1409 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 8) Rshow
1.000 UL
LTb
798 1904 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 8.5) Rshow
1.000 UL
LTb
798 2399 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 9) Rshow
1.000 UL
LTb
798 2893 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 9.5) Rshow
1.000 UL
LTb
798 3388 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 10) Rshow
1.000 UL
LTb
798 3883 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 10.5) Rshow
1.000 UL
LTb
798 4377 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 11) Rshow
1.000 UL
LTb
798 4872 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 11.5) Rshow
1.000 UL
LTb
798 420 M
0 63 V
0 4389 R
0 -63 V
798 280 M
( 7) Cshow
1.000 UL
LTb
1483 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 7.5) Cshow
1.000 UL
LTb
2168 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 8) Cshow
1.000 UL
LTb
2853 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 8.5) Cshow
1.000 UL
LTb
3538 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 9) Cshow
1.000 UL
LTb
4222 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 9.5) Cshow
1.000 UL
LTb
4907 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
5592 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10.5) Cshow
1.000 UL
LTb
6277 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 11) Cshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 11.5) Cshow
1.000 UL
LTb
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
LTb
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(IP[eV]\(calc.\)) Cshow
grestore
LTb
3880 70 M
(IP[eV]) Cshow
1.000 UP
1.000 UP
1.000 UL
LT0
3551 2399 Pls
3551 2300 Pls
4387 2992 Pls
3743 2498 Pls
5058 3586 Pls
4565 2794 Pls
4058 2695 Pls
3948 2695 Pls
3551 2498 Pls
3757 2498 Pls
3927 2695 Pls
3907 2695 Pls
4551 2992 Pls
4085 2695 Pls
3743 1805 Pls
4428 2992 Pls
4633 2992 Pls
5250 3586 Pls
4414 2992 Pls
3935 2695 Pls
3921 2300 Pls
3880 3586 Pls
2681 1706 Pls
4140 2794 Pls
4085 2498 Pls
3264 2201 Pls
3894 2498 Pls
4496 2893 Pls
3675 2498 Pls
4853 3091 Pls
4661 3091 Pls
4537 3586 Pls
4209 1607 Pls
3387 2201 Pls
4757 2893 Pls
3675 3586 Pls
5250 2992 Pls
3853 2498 Pls
3401 2300 Pls
3839 3586 Pls
6414 4476 Pls
2784 2201 Pls
3798 2498 Pls
2428 915 Pls
3305 1607 Pls
3948 2695 Pls
5702 2597 Pls
4770 2992 Pls
4072 3586 Pls
2990 4476 Pls
3538 2300 Pls
4222 3586 Pls
4948 2992 Pls
3291 2300 Pls
3784 3586 Pls
3880 2597 Pls
2743 3586 Pls
4633 3190 Pls
3277 2201 Pls
4716 2399 Pls
4674 3586 Pls
4154 2300 Pls
6483 4476 Pls
4264 4476 Pls
2483 2893 Pls
4359 2893 Pls
4743 3190 Pls
3564 2695 Pls
5154 3190 Pls
2579 1607 Pls
3414 2300 Pls
4031 3586 Pls
2825 2794 Pls
3976 2893 Pls
3839 2498 Pls
3455 2300 Pls
4948 2992 Pls
4455 2992 Pls
4140 2893 Pls
3633 2399 Pls
3264 3586 Pls
2990 1607 Pls
2853 1904 Pls
4907 1607 Pls
3003 2003 Pls
4373 2992 Pls
3647 2399 Pls
3948 3586 Pls
2716 1607 Pls
4058 2201 Pls
1362 816 Pls
2853 1607 Pls
3948 3586 Pls
3538 2399 Pls
4907 3388 Pls
3839 3586 Pls
3044 2003 Pls
4537 3586 Pls
4551 2300 Pls
2921 1607 Pls
1716 1706 Pls
3702 2498 Pls
3866 3586 Pls
2990 2003 Pls
3743 1607 Pls
3647 2300 Pls
4359 2300 Pls
3770 2399 Pls
3675 2498 Pls
4209 2498 Pls
3661 2498 Pls
4510 2498 Pls
4387 3586 Pls
3469 2300 Pls
4428 3586 Pls
4496 2300 Pls
4222 1904 Pls
3127 2794 Pls
2853 1904 Pls
3373 2003 Pls
4907 3388 Pls
5072 2992 Pls
3962 2695 Pls
3825 2498 Pls
4017 3586 Pls
3675 2498 Pls
3483 2300 Pls
3729 2498 Pls
4510 3190 Pls
2770 1607 Pls
4222 2300 Pls
3259 2201 Pls
4565 2794 Pls
3702 2498 Pls
3675 2498 Pls
3757 2498 Pls
3847 2695 Pls
4492 2992 Pls
4017 2695 Pls
4346 3586 Pls
2579 915 Pls
5318 2794 Pls
4072 2893 Pls
4236 2893 Pls
3853 2794 Pls
2483 1607 Pls
3675 2794 Pls
4085 2794 Pls
3469 2300 Pls
4524 2992 Pls
2853 1904 Pls
4501 2695 Pls
4770 3289 Pls
4674 3190 Pls
3113 2003 Pls
3181 3586 Pls
3510 2003 Pls
5209 2992 Pls
3264 2201 Pls
3551 2399 Pls
3264 2201 Pls
3812 2399 Pls
1565 915 Pls
4332 2893 Pls
4113 2794 Pls
4579 2992 Pls
4428 3586 Pls
4154 2399 Pls
4085 2201 Pls
5221 3289 Pls
3729 2498 Pls
3209 2102 Pls
4496 3586 Pls
4222 2498 Pls
2990 1904 Pls
3359 2003 Pls
3633 3586 Pls
4510 2992 Pls
4798 3586 Pls
4250 2695 Pls
4428 3586 Pls
4222 3586 Pls
3086 2201 Pls
3976 2695 Pls
4359 3586 Pls
3483 2498 Pls
4053 816 Pls
2729 1805 Pls
3401 2399 Pls
4483 2794 Pls
2812 2893 Pls
4058 2498 Pls
3853 3586 Pls
4346 2893 Pls
3962 2695 Pls
4277 2893 Pls
3592 2498 Pls
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
